# Dockerfile for Temporal Worker

# Build stage
FROM node:20-bookworm-slim AS builder

# Enable pnpm via corepack
RUN corepack enable && corepack prepare pnpm@8.9.0 --activate

WORKDIR /app

# Install dependencies first (better caching)
COPY package.json pnpm-lock.yaml ./
RUN pnpm install

# Copy source and build
COPY . .
RUN pnpm build

# Runtime stage
FROM node:20-bookworm-slim AS runner

ENV NODE_ENV=production
WORKDIR /app

# Define build arguments for environment variables
ARG TEMPORAL_ADDRESS
ARG TEMPORAL_NAMESPACE
ARG TEMPORAL_TLS_CERT
ARG TEMPORAL_TLS_KEY
ARG TEMPORAL_API_KEY
ARG POSTGRES_CONNECTION_STRING
ARG OPENAI_API_KEY
ARG DOCS_MAX_PAGES
ARG DOCS_CONCURRENCY
ARG DOCS_TIMEOUT_MS
ARG DOCS_USER_AGENT
ARG DOCS_INCLUDE_REGEX
ARG DOCS_EXCLUDE_REGEX

# Set environment variables from build arguments
ENV TEMPORAL_ADDRESS=${TEMPORAL_ADDRESS}
ENV TEMPORAL_NAMESPACE=${TEMPORAL_NAMESPACE}
ENV TEMPORAL_TLS_CERT=${TEMPORAL_TLS_CERT}
ENV TEMPORAL_TLS_KEY=${TEMPORAL_TLS_KEY}
ENV TEMPORAL_API_KEY=${TEMPORAL_API_KEY}
ENV POSTGRES_CONNECTION_STRING=${POSTGRES_CONNECTION_STRING}
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
ENV DOCS_MAX_PAGES=${DOCS_MAX_PAGES}
ENV DOCS_CONCURRENCY=${DOCS_CONCURRENCY}
ENV DOCS_TIMEOUT_MS=${DOCS_TIMEOUT_MS}
ENV DOCS_USER_AGENT=${DOCS_USER_AGENT}
ENV DOCS_INCLUDE_REGEX=${DOCS_INCLUDE_REGEX}
ENV DOCS_EXCLUDE_REGEX=${DOCS_EXCLUDE_REGEX}

# Copy built output and minimal files needed for runtime deps
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./
COPY --from=builder /app/pnpm-lock.yaml ./

# Install production dependencies only
RUN corepack enable && \
    corepack prepare pnpm@8.9.0 --activate && \
    pnpm install --prod --ignore-scripts

# Temporal worker does not expose a port

# Start the Temporal worker via package script
CMD ["pnpm", "start:worker"]


